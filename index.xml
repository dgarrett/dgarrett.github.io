<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dylan Garrett</title>
    <link>https://dylan-garrett.com/</link>
    <description>Recent content on Dylan Garrett</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year} Dylan Garrett</copyright>
    <lastBuildDate>Sun, 09 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://dylan-garrett.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust on a Digispark ATtiny85</title>
      <link>https://dylan-garrett.com/blog/rust-digispark-attiny/</link>
      <pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/rust-digispark-attiny/</guid>
      <description>The Digistump Digispark is a tiny, simple, and cheap development board using the ATtiny85 MCU. While the official version is no longer for sale, clones are easily found online for around $2 each.
Rahix&amp;rsquo;s avr-hal already supports the ATtiny85 on the Adafruit Trinket board. The Trinket is nearly identical to the Digispark, but with a different USB bootloader, so avr-hal&amp;rsquo;s cargo run support won&amp;rsquo;t work. Instead, you&amp;rsquo;ll need to convert the output binary and deploy it with the micronucleus CLI tool.</description>
    </item>
    
    <item>
      <title>Readwise Inline Tags</title>
      <link>https://dylan-garrett.com/blog/readwise-inline-tags/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/readwise-inline-tags/</guid>
      <description>The highlight-aggregation service Readwise supports a feature called inline tagging, which allows front-loading the work of organizing highlights by adding tags to highlight notes. Beyond plain tagging, Readwise supports several special action tags.
Readwise documentation on this feature is sparse and spread across several locations, so here is a summary.
Action tags Action Tag Description .cN Concatenate highlights 1 (&amp;quot;.c1 + .c2&amp;quot;, &amp;ldquo;.c1 + .c2 + .c3&amp;rdquo;) .hN Heading level 2 (.</description>
    </item>
    
    <item>
      <title>Constrained Technology</title>
      <link>https://dylan-garrett.com/blog/constrained-technology/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/constrained-technology/</guid>
      <description>The enemy of art is the absence of limitations. — Orson Welles
I&amp;rsquo;d like to share some of my favorite constrained technologies. Technologies that I believe are better because of, and not despite, their limitations.
e-Ink E-ink insists on a certain interaction model. Grey-scale rather than full color pushes one toward text and informative illustrations. Slow refresh enforces pages of static content rather than endless scrolling of attention-grabbing content. These nudges transfer control back to the reader and make e-ink my favorite display technology.</description>
    </item>
    
    <item>
      <title>Doom Fire in LÖVE/lua</title>
      <link>https://dylan-garrett.com/blog/doom-fire-love2d/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/doom-fire-love2d/</guid>
      <description>This weekend I read Fabien Sanglard&amp;rsquo;s post describing how the fire effect was implemented in Doom on the Playstation 1 and I figured this was a good chance to implement a small toy program in LÖVE. Here&amp;rsquo;s an iterative tutorial, written for beginners, to demonstrate implementing this effect using Lua in the LÖVE environment. If you&amp;rsquo;re already experienced with Lua or programming in general then go read Fabien&amp;rsquo;s post. It&amp;rsquo;s much more succinct.</description>
    </item>
    
    <item>
      <title>Score Tracker</title>
      <link>https://dylan-garrett.com/projects/score-tracker/</link>
      <pubDate>Wed, 30 Dec 2020 21:49:25 -0800</pubDate>
      
      <guid>https://dylan-garrett.com/projects/score-tracker/</guid>
      <description>Download for Apple Watch Keep track of the score while you play board games, card games, or any other kind of game with Score Tracker.
It&amp;rsquo;s a simple app, just add players, tap on a player, and add or subtract points.</description>
    </item>
    
    <item>
      <title>iOS App Support</title>
      <link>https://dylan-garrett.com/other/ios-app-support/</link>
      <pubDate>Wed, 30 Dec 2020 21:36:44 -0800</pubDate>
      
      <guid>https://dylan-garrett.com/other/ios-app-support/</guid>
      <description>I don&amp;rsquo;t officially provide support for my free apps. They are provided without warranty and are intended for use as-is. But you may contact me at app-support@dylan-garrett.com .
THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</description>
    </item>
    
    <item>
      <title>Score Tracker Privacy Policy</title>
      <link>https://dylan-garrett.com/other/score-tracker-privacy-policy/</link>
      <pubDate>Wed, 30 Dec 2020 21:22:58 -0800</pubDate>
      
      <guid>https://dylan-garrett.com/other/score-tracker-privacy-policy/</guid>
      <description>Privacy Policy
Dylan Garrett built the Score Tracker for Watch app as a Free app. This SERVICE is provided by Dylan Garrett at no cost and is intended for use as is.
This page is used to inform visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.
If you choose to use my Service, then you agree to the collection and use of information in relation to this policy.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://dylan-garrett.com/resume/</link>
      <pubDate>Sun, 19 Jul 2020 21:24:26 -0700</pubDate>
      
      <guid>https://dylan-garrett.com/resume/</guid>
      <description> PDF </description>
    </item>
    
    <item>
      <title>birb.</title>
      <link>https://dylan-garrett.com/projects/birb/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/projects/birb/</guid>
      <description>Ludum Dare Submission Source Play in an online Gameboy emulator! Begin life as a mere dot. Progress through trials into a beautiful birb. Peck your way to the top. The fun never ends! :) (Seriously though, it just restarts the last level endlessly)
Uack.
Play in a web browser or on a Gameboy or Gameboy emulator.
Written for Gameboy and Gameboy Color in C using GBDK. Download the ROM and play with a Gameboy emulator for sound and the full experience.</description>
    </item>
    
    <item>
      <title>Audio Necklace</title>
      <link>https://dylan-garrett.com/projects/audio-necklace/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/projects/audio-necklace/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Basic E-Reader</title>
      <link>https://dylan-garrett.com/projects/basic-ereader/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/projects/basic-ereader/</guid>
      <description>Source What you need WaveShare EPaper Display (ex 1.54in 200x200 https://smile.amazon.com/gp/product/B07DH6K1VQ/ ) ESP32 Development Board (ex https://www.adafruit.com/product/3405 or https://smile.amazon.com/gp/product/B0718T232Z/ ) 4 SPST switches Breadboard Optional: Basic USB logic analyzer (https://smile.amazon.com/gp/product/B077LSG5P2/ ) Wiring Instructions The specific wiring is going to be different depending on what board you&amp;rsquo;re using. These instructions are for the Adafruit HUZZAH32
Connect the following:
SDI/SCK -&amp;gt; MOSI SCK/SCLK -&amp;gt; SCK CS -&amp;gt; 15 DC -&amp;gt; 33 RST/Reset -&amp;gt; 27 Busy -&amp;gt; 32 If you want to use different pins, you can change the pin configurations for GxIO_Class and GxEPD_Class in BasicEPaperReader.</description>
    </item>
    
    <item>
      <title>Keeb</title>
      <link>https://dylan-garrett.com/projects/keeb/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/projects/keeb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tweeter</title>
      <link>https://dylan-garrett.com/projects/tweeter/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/projects/tweeter/</guid>
      <description>Source Send messages over LoRa to a thermal printer
What you need 2x ESP32 Development Boards with LoRa (ex https://smile.amazon.com/gp/product/B076MTF8NW/ ) One will be used as the Sender One will be used as the receiver Serial Thermal Printer and paper (ex https://www.adafruit.com/product/597 ) Wiring Instructions for Sender ESP32 board Just plug into USB for power
Wiring Instructions for Receiver ESP32 board One of your boards will be the receiver, so it needs to be connected to the thermal printer.</description>
    </item>
    
  </channel>
</rss>
