<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Dylan Garrett</title>
    <link>https://dylan-garrett.com/blog/</link>
    <description>Recent content in Blog on Dylan Garrett</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© {year} Dylan Garrett</copyright>
    <lastBuildDate>Sat, 21 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://dylan-garrett.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Readwise Inline Tags</title>
      <link>https://dylan-garrett.com/blog/readwise-inline-tags/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/readwise-inline-tags/</guid>
      <description>The highlight-aggregation service Readwise supports a feature called inline tagging, which allows front-loading the work of organizing highlights by adding tags to highlight notes. Beyond plain tagging, Readwise supports several special action tags.
Readwise documentation on this feature is sparse and spread across several locations, so here is a summary.
Action tags    Action Tag Description     .cN Concatenate highlights 1 (&amp;quot;.c1 + .c2&amp;quot;, &amp;ldquo;.c1 + .</description>
    </item>
    
    <item>
      <title>Constrained Technology</title>
      <link>https://dylan-garrett.com/blog/constrained-technology/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/constrained-technology/</guid>
      <description>The enemy of art is the absence of limitations. — Orson Welles
 I&amp;rsquo;d like to share some of my favorite constrained technologies. Technologies that I believe are better because of, and not despite, their limitations.
e-Ink E-ink insists on a certain interaction model. Grey-scale rather than full color pushes one toward text and informative illustrations. Slow refresh enforces pages of static content rather than endless scrolling of attention-grabbing content.</description>
    </item>
    
    <item>
      <title>Doom Fire in LÖVE/lua</title>
      <link>https://dylan-garrett.com/blog/doom-fire-love2d/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dylan-garrett.com/blog/doom-fire-love2d/</guid>
      <description>This weekend I read Fabien Sanglard&amp;rsquo;s post describing how the fire effect was implemented in Doom on the Playstation 1 and I figured this was a good chance to implement a small toy program in LÖVE. Here&amp;rsquo;s an iterative tutorial, written for beginners, to demonstrate implementing this effect using Lua in the LÖVE environment. If you&amp;rsquo;re already experienced with Lua or programming in general then go read Fabien&amp;rsquo;s post. It&amp;rsquo;s much more succinct.</description>
    </item>
    
  </channel>
</rss>
